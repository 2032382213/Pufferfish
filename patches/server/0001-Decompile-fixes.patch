From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kevin Raneri <kevin.raneri@gmail.com>
Date: Fri, 4 Mar 2022 05:03:15 -0500
Subject: [PATCH] Decompile fixes


diff --git a/src/main/java/net/minecraft/world/level/biome/Biome.java b/src/main/java/net/minecraft/world/level/biome/Biome.java
index 0422d787593cc65aadcae9f7517ec67a52f1f72b..caa2f011c0ee0c1ffccfb298f845cc9e8998d4f3 100644
--- a/src/main/java/net/minecraft/world/level/biome/Biome.java
+++ b/src/main/java/net/minecraft/world/level/biome/Biome.java
@@ -37,6 +37,36 @@ import net.minecraft.world.level.material.Fluids;
 public final class Biome {
     public static final Codec<Biome> DIRECT_CODEC;
     public static final Codec<Biome> NETWORK_CODEC;
+    
+    // Pufferfish start - decompile fixes
+    static {
+        DIRECT_CODEC = RecordCodecBuilder.create((instance) -> {
+            return instance.group(Biome.ClimateSettings.CODEC.forGetter((biome) -> {
+                return biome.climateSettings;
+            }), Biome.BiomeCategory.CODEC.fieldOf("category").forGetter((biome) -> {
+                return biome.biomeCategory;
+            }), BiomeSpecialEffects.CODEC.fieldOf("effects").forGetter((biome) -> {
+                return biome.specialEffects;
+            }), BiomeGenerationSettings.CODEC.forGetter((biome) -> {
+                return biome.generationSettings;
+            }), MobSpawnSettings.CODEC.forGetter((biome) -> {
+                return biome.mobSettings;
+            })).apply(instance, Biome::new);
+        });
+        NETWORK_CODEC = RecordCodecBuilder.create((instance) -> {
+            return instance.group(Biome.ClimateSettings.CODEC.forGetter((biome) -> {
+                return biome.climateSettings;
+            }), Biome.BiomeCategory.CODEC.fieldOf("category").forGetter((biome) -> {
+                return biome.biomeCategory;
+            }), BiomeSpecialEffects.CODEC.fieldOf("effects").forGetter((biome) -> {
+                return biome.specialEffects;
+            })).apply(instance, (weather, category, effects) -> {
+                return new Biome(weather, category, effects, BiomeGenerationSettings.EMPTY, MobSpawnSettings.EMPTY);
+            });
+        });
+    }
+    // Pufferfish end
+    
     public static final Codec<Holder<Biome>> CODEC = RegistryFileCodec.create(Registry.BIOME_REGISTRY, DIRECT_CODEC);
     public static final Codec<HolderSet<Biome>> LIST_CODEC = RegistryCodecs.homogeneousList(Registry.BIOME_REGISTRY, DIRECT_CODEC);
     private static final PerlinSimplexNoise TEMPERATURE_NOISE = new PerlinSimplexNoise(new WorldgenRandom(new LegacyRandomSource(1234L)), ImmutableList.of(0));
@@ -253,6 +283,8 @@ public final class Biome {
         return biomeEntry.value().getBiomeCategory();
     }
 
+    // Pufferfish - decompile fixes (what the fuck)
+    /*
     static {
         DIRECT_CODEC = RecordCodecBuilder.create((instance) -> {
             return instance.group(Biome.ClimateSettings.CODEC.forGetter((biome) -> {
@@ -279,6 +311,8 @@ public final class Biome {
             });
         });
     }
+     */
+    // Pufferfish end
 
     public static class BiomeBuilder {
         @Nullable
